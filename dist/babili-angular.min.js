!function(){"use strict";var e=angular.module("babili",["ng"]),t=null,n=null,o=null,r=!1;e.provider("babili",function(){var i=this;i.options={apiUrl:"http://api.babili.local",socketUrl:"http://pusher.babili.local",aliveInterval:3e4},i.configure=function(e){Object.keys(e).forEach(function(t){i.options[t]=e[t]})},i.$get=["$q","$interval",function(s,a){Object.keys(i.options).forEach(function(t){e.constant(t,i.options[t])});var u=i.options.aliveInterval,d=angular.injector(["babili"]),c=function(e){return function(t){var n=d.get("BabiliMessage"),r=new n(t.data),i=o.roomWithId(r.room.id);void 0!==i&&null!==i?e.$apply(function(){o.hasRoomOpened(i)||(i.unreadMessageCount=i.unreadMessageCount+1,o.unreadMessageCount=o.unreadMessageCount+1)}):d.get("BabiliRoom").get(r.room.id).then(function(t){o.addRoom(t),i=t,o.hasRoomOpened(i)||e.$apply(function(){i.unreadMessageCount=i.unreadMessageCount,o.unreadMessageCount=o.unreadMessageCount+1})})}};return{headers:function(){var e={Authorization:"Bearer "+t};return e},token:function(){return t},connect:function(e,i){var h=s.defer();return void 0===o||null===o?(t=i,d.get("BabiliMe").get().then(function(t){o=t;var i=d.get("babiliSocket").initialize();i.on("new message",c(e)),i.on("connected",function(e){o.deviceSessionId=e.deviceSessionId}),r=!0;var s=function(){o.updateAliveness()};s(),n=a(s,u),h.resolve(o)})["catch"](function(e){h.reject(e)})):(window.console.log("Babili: /!\\ You should call 'babili.connect' only once."),h.resolve(o)),h.promise},disconnect:function(){var e=s.defer();return t=null,a.cancel(n),d.get("babiliSocket").disconnect().then(function(){e.resolve()}),t=null,n=null,o=null,r=!1,e.promise}}}]})}(),function(){"use strict";angular.module("babili").factory("BabiliMe",["$http","$q","babili","apiUrl","BabiliRoom","BabiliMessage","babiliUtils",function(e,t,n,o,r,i,s){var a=function(e){this.id=e.id,this.rooms=[],this.openedRooms=[],this.unreadMessageCount=0,this.roomCount=0,e.meta&&(this.unreadMessageCount=e.meta.unreadMessageCount||0,this.roomCount=e.meta.roomCount||0)};return a.get=function(){return e({method:"GET",url:o+"/user",headers:n.headers()}).then(function(e){return new a(e.data.data)})},a.prototype.updateAliveness=function(){return e({method:"PUT",url:o+"/user/alive",headers:n.headers(),data:{data:{type:"alive"}}})},a.prototype.fetchRooms=function(e){var t=this;return r.query(e).then(function(e){return e.forEach(function(e){t.roomWithId(e.id)||t.addRoom(e),e.open!==!0||t.openedRoomWithId(e.id)||t.openedRooms.push(e)}),e})},a.prototype.fetchOpenedRooms=function(){return this.fetchRooms({onlyOpened:!0})},a.prototype.fetchClosedRooms=function(){return this.fetchRooms({onlyClosed:!0})},a.prototype.fetchMoreRooms=function(){return this.fetchRooms({firstSeenRoomId:this.firstSeenRoom.id})},a.prototype.fetchRoomByIds=function(e){return this.fetchRooms({"roomIds[]":e})},a.prototype.roomWithId=function(e){var t=s.findIndex(this.rooms,function(t){return t.id===e});return this.rooms[t]},a.prototype.openedRoomWithId=function(e){var t=s.findIndex(this.openedRooms,function(t){return t.id===e});return this.openedRooms[t]},a.prototype.hasRoomOpened=function(e){return Boolean(this.openedRoomWithId(e.id))},a.prototype.addRoom=function(e){(!this.firstSeenRoom||this.firstSeenRoom.lastActivityAt>e.lastActivityAt)&&(this.firstSeenRoom=e);var t=s.findIndex(this.rooms,function(t){return t.id===e.id});t>-1?this.rooms[t]=e:this.rooms.push(e)},a.prototype.openRoom=function(e){var n=this,o=t.defer();return n.hasRoomOpened(e)?o.resolve():e.openMembership().then(function(){n.openedRooms.push(e),e.markAllMessageAsRead().then(function(e){n.unreadMessageCount=Math.max(n.unreadMessageCount-e,0)}),o.resolve(e)})["catch"](function(e){o.reject(e)}),o.promise},a.prototype.closeRoom=function(e){var n=this,o=t.defer();return n.hasRoomOpened(e)?e.closeMembership().then(function(){var t=s.findIndex(n.openedRooms,function(t){return t.id===e.id});t>-1&&n.openedRooms.splice(t,1),o.resolve(e)}):o.resolve(),o.promise},a.prototype.closeRooms=function(e){var n=this,o=e.map(function(e){return n.closeRoom(e)});return t.all(o)},a.prototype.openRoomAndCloseOthers=function(e){var t=this,n=t.openedRooms.filter(function(t){return t.id!==e.id});return t.closeRooms(n).then(function(){return t.openRoom(e)})},a.prototype.hasOpenedRooms=function(){return this.openedRooms.length>0},a.prototype.createRoom=function(e,t,n){var o=this;return r.create(e,o.id,t,n).then(function(e){return o.addRoom(e),e})},a.prototype.updateRoom=function(e){var t=this;return e.update().then(function(e){var n=t.roomWithId(e.id);return n.name=e.name,n})},a.prototype.addUserToRoom=function(e,t){return e.addUser(t)},a.prototype.sendMessage=function(e,n){var o=this,r=t.defer();return n&&n.content?e?(n.deviceSessionId=o.deviceSessionId,i.create(e,n).then(function(t){e.addMessage(t),r.resolve(t)})["catch"](function(e){r.reject(e)})):r.reject(new Error("Room need to be defined.")):r.resolve(null),r.promise},a.prototype.messageSentByMe=function(e){return e&&e.sender&&this.id===e.sender.id},a.prototype.deleteMessage=function(e){var n=t.defer(),o=this;return e?i["delete"](e).then(function(){var t=o.roomWithId(e.room.id),r=s.findIndex(t.messages,function(t){return t.id===e.id});t.messages.splice(r,1),n.resolve()})["catch"](function(e){n.reject(e)}):n.resolve(null),n.promise},a}])}(),function(){"use strict";angular.module("babili").factory("BabiliMessage",["$http","babili","apiUrl","BabiliUser",function(e,t,n,o){var r=function(e){var t=angular.injector(["babili"]).get("BabiliRoom");this.id=e.id,this.content=e.attributes.content,this.contentType=e.attributes.contentType,this.createdAt=new Date(e.attributes.createdAt),this.room=new t(e.relationships.room.data),e.relationships.sender&&(this.sender=new o(e.relationships.sender.data))};return r.create=function(o,i){return e({method:"POST",url:n+"/user/rooms/"+o.id+"/messages",headers:t.headers(),data:{data:{type:"message",attributes:{content:i.content,contentType:i.contentType,deviceSessionId:i.deviceSessionId}}}}).then(function(e){return new r(e.data.data)})},r.query=function(o,i){return e({method:"GET",url:n+"/user/rooms/"+o.id+"/messages",headers:t.headers(),params:i}).then(function(e){return e.data.data.map(function(e){return new r(e)})})},r["delete"]=function(o){return e({method:"delete",url:n+"/user/rooms/"+o.room.id+"/messages/"+o.id,headers:t.headers()})},r}])}(),function(){"use strict";angular.module("babili").factory("BabiliRoom",["$http","babili","$q","apiUrl","BabiliUser","BabiliMessage","babiliUtils",function(e,t,n,o,r,i,s){var a=function(e){this.id=e.id,this.users=[],this.messages=[],e.attributes&&(this.lastActivityAt=e.attributes.lastActivityAt,this.name=e.attributes.name,this.open=e.attributes.open,this.unreadMessageCount=e.attributes.unreadMessageCount),e.relationships&&(e.relationships.users&&(this.users=e.relationships.users.data.map(function(e){return new r(e)})),e.relationships.messages&&(this.messages=e.relationships.messages.data.map(function(e){return new i(e)})),e.relationships.initiator&&(this.initiator=new r(e.relationships.initiator)))};return a.get=function(n){return e({method:"GET",url:o+"/user/rooms/"+n,headers:t.headers()}).then(function(e){return new a(e.data.data)})},a.query=function(n){return e({method:"GET",url:o+"/user/rooms",headers:t.headers(),params:n}).then(function(e){return e.data.data.map(function(e){return new a(e)})})},a.create=function(n,r,i,s){var u=s&&s.noDuplicate===!0;return e({method:"POST",url:o+"/user/rooms?noDuplicate="+u,headers:t.headers(),data:{data:{type:"room",attributes:{name:n},relationships:{users:{data:i.map(function(e){return{type:"user",id:e}})}}}}}).then(function(e){return new a(e.data.data)})},a.prototype.updateMembership=function(n){var r=this;return e({method:"PUT",url:o+"/user/rooms/"+this.id+"/membership",headers:t.headers(),data:{data:{type:"membership",attributes:n}}}).then(function(e){return r.open=e.data.data.attributes.open,r})},a.prototype.update=function(){var n=this;return e({method:"PUT",url:o+"/user/rooms/"+this.id,headers:t.headers(),data:{data:{type:"room",attributes:{name:n.name}}}}).then(function(e){return n.name=e.data.data.attributes.name,n})},a.prototype.addUser=function(n){var i=this;return e({method:"POST",url:o+"/user/rooms/"+this.id+"/memberships",headers:t.headers(),data:{data:{type:"membership",relationships:{user:{data:{type:"user",id:n}}}}}}).then(function(e){return i.users.push(new r(e.data.data.relationships.user.data)),i})},a.prototype.messageWithId=function(e){var t=s.findIndex(this.messages,function(t){return t.id===e});return this.messages[t]},a.prototype.openMembership=function(){return this.updateMembership({open:!0})},a.prototype.closeMembership=function(){return this.updateMembership({open:!1})},a.prototype.addMessage=function(e){this.messages.push(e)},a.prototype.markAllMessageAsRead=function(){var r=this,i=n.defer();return r.unreadMessageCount>0?e({method:"PUT",url:o+"/user/rooms/"+this.id+"/membership/unread-messages",headers:t.headers()}).then(function(e){r.unreadMessageCount=0,i.resolve(e.readMessageCount)}):(i.resolve(0),i.promise)},a.prototype.fetchMoreMessages=function(){var e=this,t={firstSeenMessageId:e.messages[0].id};return i.query(e,t).then(function(t){return e.messages.unshift.apply(e.messages,t),t})},a}])}(),function(){"use strict";angular.module("babili").factory("babiliSocket",["babili","socketUrl","$q",function(e,t,n){var o,r={initialize:function(){return o=io.connect(t,{query:"token="+e.token(),forceNew:!0})},disconnect:function(){var e=n.defer();return o?(o.close(),o=void 0,e.resolve()):e.resolve(),e.promise}};return r}])}(),function(){"use strict";angular.module("babili").factory("BabiliUser",function(){var e=function(e){this.id=e.id,e.attributes&&(this.status=e.attributes.status)};return e})}(),function(){"use strict";angular.module("babili").factory("babiliUtils",function(){var e={findIndex:function(e,t){for(var n,o=e.length,r=0;o>r;r+=1)if(n=e[r],t(n))return r;return-1}};return e})}();